services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: backend_blog_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: backend_blog_dev
      MYSQL_USER: backend_blog_user
      MYSQL_PASSWORD: backend_blog_password
    ports:
      - "3307:3306"  # External port 3307 maps to internal port 3306
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - backend_blog_network

  # Phoenix Application
  web:
    build: .
    container_name: backend_blog_web
    environment:
      - MIX_ENV=dev
      - DATABASE_URL=ecto://backend_blog_user:backend_blog_password@db/backend_blog_dev
      - SECRET_KEY_BASE=${SECRET_KEY_BASE} # Load from a .env file for security
      - PHX_HOST=localhost
      - PHX_PORT=4000
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/deps
      - /app/_build
    # The command should ideally just start the server.
    # One-off tasks like migrations should be run explicitly.
    command: sh -c "mix deps.get && mix phx.server"
    networks:
      - backend_blog_network

volumes:
  mysql_data:

networks:
  backend_blog_network:
    driver: bridge
